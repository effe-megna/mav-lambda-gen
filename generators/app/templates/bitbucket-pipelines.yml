image: atlassian/default-image:2
pipelines:
  branches:
    development:
      - step:
          name: Test
          script:
            - npm install -g npm@latest
            - cd src
            - npm ci
            - npm test
      - step:
          name: Deploy to AWS
          deployment: test
          caches:
            - pip
          script:
            - npm install -g npm@latest
            - apt-get update
            - apt-get install -y python-pip
            - pip install awscli
            - npm run build
            - export AWS_ACCESS_KEY_ID=$DEVELOPMENT_AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$DEVELOPMENT_AWS_SECRET_ACCESS_KEY
            - export AWS_DEFAULT_REGION=$DEVELOPMENT_AWS_DEFAULT_REGION
            - aws cloudformation validate-template --template-body file://template-development.json
            - aws cloudformation package --template-file template-development.json --s3-bucket becharge-services-deploy-development --use-json --output-template-file deployable-template.json
            - aws cloudformation deploy --template-file deployable-template.json --stack-name <%= newStackName %> --capabilities CAPABILITY_IAM
    staging:
      - step:
          name: Deploy to AWS
          deployment: staging
          caches:
            - pip
          script:
            - npm install -g npm@latest
            - apt-get update
            - apt-get install -y python-pip
            - pip install awscli
            - npm run build
            - export AWS_ACCESS_KEY_ID=$STAGING_AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$STAGING_AWS_SECRET_ACCESS_KEY
            - export AWS_DEFAULT_REGION=$STAGING_AWS_DEFAULT_REGION
            - aws cloudformation validate-template --template-body file://template.json
            - aws cloudformation package --template-file template.json --s3-bucket becharge-services-deploy-staging --use-json --output-template-file deployable-template.json
            - aws cloudformation deploy --template-file deployable-template.json --stack-name <%= newStackName %> --capabilities CAPABILITY_IAM
    master:
      # - step:
      #     name: Build lambda archive
      #     script:
      #         - npm install -g npm@latest
      #         - apt-get update
      #         - apt-get install -y zip
      #         - npm ci --only=production
      #         - zip -r archive.zip node_modules index.js
      #     artifacts:
      #         - archive.zip
      - step:
          name: Deploy to AWS and create new version
          deployment: production
          caches:
            - pip
          script:
            - apt-get update
            - apt-get install -y python-pip
            - apt-get install -y jq
            - pip install awscli
            - export AWS_ACCESS_KEY_ID=$PRODUCTION_AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$PRODUCTION_AWS_SECRET_ACCESS_KEY
            - export AWS_DEFAULT_REGION=$PRODUCTION_AWS_DEFAULT_REGION
            # - aws lambda update-function-code --function-name <%= newStackName %> --zip-file fileb://archive.zip
            - version=`aws lambda publish-version --function-name <%= newLambdaName %> | jq -r .Version`
            - aws lambda update-alias --function-name <%= newLambdaName %> --function-version $version --name production
